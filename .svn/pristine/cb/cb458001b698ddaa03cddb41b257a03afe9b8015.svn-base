<?php

class clientAdminImageController extends AdminImageController
{
    
    function init() {
        parent::init();
    }
    
    public function actionAjaxImageFTP() {

        $this->layout = false;
        foreach ($_POST as $k => $v) {
            $$k = $v;
        }

        $image = eImage::model()->findByPk($id);

        if (!is_null($image)) {

            $fileName = $image->filename;
            $fileExt = explode('.', $fileName);
            $fileExt = $fileExt[1];
            $fileLocal = Yii::app()->params['paths']['image'] . '/' . $fileName;
            
            // get destination id
            $destination = eDestination::model()->findByAttributes(array('destination' => 'client'));
            if(is_null($destination)) {
                echo json_encode(array('response' => 'Unable to locate client as a destination.'));
                exit;
            }
            
            // get latest count
            $imageIncrementValue = eImageDestination::model()->countByAttributes(array('destination_id' => $destination->id));
            if(is_null($imageIncrementValue)) {
              $imageIncrementValue = 0;
            }
            
            // client specific naming convention
            $fileName = Yii::app()->params['ftp_naming_convention_image'] . $imageIncrementValue . '.' . $fileExt;
            
            if (!file_exists($fileLocal)) {
                echo json_encode(array('response' => 'Cannot find local file.'));
            }

            $ftp = FTPUtility::transfer(Yii::app()->params['ftp']['secure'], $fileLocal, $fileName);

            if (!$ftp) {
                $message = Yii::app()->user->getFlash('error');
                echo json_encode(array('response' => $message . $fileLocal));
            } 
            
            // store image_destination record
            $imageDestination = new eImageDestination();
            $imageDestination->video_id = $image->id;
            $imageDestination->user_id = Yii::app()->user->id;
            $imageDestination->destination_id = $destination->id;
            $imageDestination->response = 'Image was successfully converted for tv and sent over to client';
            $imageDestination->created_on = new CDbExpression('NOW()');
            $imageDestination->save();
            
            $message = Yii::app()->user->getFlash('success');
            echo json_encode(array('response' => $message));
            
        } else {
            echo json_encode(array('response' => 'Unable to find image by id.'));
        }
    }
    
    public function actionAjaxImageUpdateStatus() {

        $this->layout = false;
        $status = trim($_POST['status']);
        $imageId = trim($_POST['imageId']);

        $image = eImage::model()->findByPk($imageId);

        if (!is_null($image)) {
            $image->status = $status;
            $image->arbitrator_id = Yii::app()->user->id;
            $image->status_date = new CDbExpression('NOW()');
            $image->save();
            if($image->status == 'accepted'){
                $userEmail = eUserEmail::model()->findByAttributes(array('user_id' => $image->user_id, 'type' => 'primary'));
                $email = $userEmail->email;
                $viewKey = $image->view_key;
                ClientMailUtility::send('photo approve', $email);
            }
            elseif ($image->status == 'denied') {
            {
                $userEmail = eUserEmail::model()->findByAttributes(array('user_id' => $image->user_id, 'type' => 'primary'));
                $email = $userEmail->email;
                $viewKey = $image->view_key;
                ClientMailUtility::send('photo not approved',$email);
            }
        }
        }
        
        else {
            echo json_encode(array('success' => 'false'));
        }
    } 
}