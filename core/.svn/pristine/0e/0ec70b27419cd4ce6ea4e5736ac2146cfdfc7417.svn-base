<?php

/**
 * This is the model class for table "ticker_search_pull".
 *
 * The followings are the available columns in table 'ticker_search_pull':
 * @property integer $id
 * @property integer $user_id
 * @property integer $grid_w
 * @property integer $grid_h
 * @property integer $grid_w_squares
 * @property integer $grid_h_squares
 * @property string $grid_background
 * @property string $square_color
 * @property integer $control_scale
 * @property integer $is_active
 * @property integer $is_deleted
 * @property string $created_on
 * @property string $updated_on
 *
 * The followings are the available model relations:
 * @property User $user
 *
 */
class GameReveal extends ActiveRecord {

    /**
     * @return string the associated database table name
     */
    public function tableName() {
        return 'game_reveal';
    }

    public function rules() {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        return array(
            array('user_id, title, grid_w, grid_h, grid_w_squares, grid_h_squares, grid_background, square_color, control_scale, created_on, updated_on', 'required'),
            array('user_id, grid_w, grid_h, grid_w_squares, grid_h_squares, is_active, is_deleted', 'numerical', 'integerOnly' => true),
            array('title, grid_background', 'length', 'max' => 255),
            array('square_color', 'length', 'max' => 15),
            array('user_id, title, grid_w, grid_h, grid_w_squares, grid_h_squares, grid_background, square_color, control_scale, is_active, is_deleted, created_on, updated_on', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        // NOTE: you may need to adjust the relation name and the related
        // class name for the relations automatically generated below.
        return array(
            'user' => array(self::BELONGS_TO, 'User', 'user_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
            'id' => 'ID',
            'user_id' => 'User',
            'title' => 'Title',
            'grid_w' => 'Grid Width',
            'grid_h' => 'Grid Height',
            'grid_w_squares' => 'Grid Width Squares',
            'grid_h_squares' => 'Grid Height Squares',
            'grid_background' => 'Grid Background',
            'square_color' => 'Square Color',
            'control_scale' => 'Control Scale',
            'is_active' => 'Is Active',
            'is_deleted' => 'Is Deleted',
            'created_on' => 'Created On',
            'updated_on' => 'Updated On',
        );
    }

    public function search() {
        // @todo Please modify the following code to remove attributes that should not be searched.

        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('user_id', $this->user_id);
        $criteria->compare('title', $this->title);
        $criteria->compare('grid_w', $this->grid_w);
        $criteria->compare('grid_h', $this->grid_h);
        $criteria->compare('grid_w_squares', $this->grid_w_squares);
        $criteria->compare('grid_h_squares', $this->grid_h_squares);
        $criteria->compare('grid_background', $this->grid_background);
        $criteria->compare('square_color', $this->square_color);
        $criteria->compare('control_scale', $this->control_scale);
        $criteria->compare('is_active', $this->is_active);
        $criteria->compare('is_deleted', $this->is_deleted);
        $criteria->compare('created_on', $this->created_on !== null ? gmdate("Y-m-d H:i:s", strtotime($this->created_on)) : null);
        $criteria->compare('updated_on', $this->updated_on !== null ? gmdate("Y-m-d H:i:s", strtotime($this->updated_on)) : null);
        
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    /**
     * Returns the static model of the specified AR class.
     * Please note that you should have this exact method in all your CActiveRecord descendants!
     * @param string $className active record class name.
     * @return TickerSearchStats the static model class
     */
    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

}

