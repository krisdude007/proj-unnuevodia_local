<?php

class eQuestion extends Question {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function rules() {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        return array(
            array('user_id', 'default', 'value' => Yii::app()->user->getId()),
            array('created_on,updated_on', 'default', 'value' => date("Y-m-d H:i:s"),'setOnEmpty'=>false,'on' => 'insert'),
            array('updated_on', 'default', 'value' => date("Y-m-d H:i:s"),'setOnEmpty'=>false,'on' => 'update'),
            array('question, start_time, end_time', 'required', 'on' => 'insert'),
            array('user_id', 'numerical', 'integerOnly' => true),
            array('question', 'length', 'max' => 255),
            array('hashtag', 'length', 'max'=> 64),
            // The following rule is used by search().
            // Please remove those attributes that should not be searched.
            array('id, user_id, question, hashtag, start_time, end_time, created_on, updated_on', 'safe', 'on' => 'search'),
        );
    }
    
    public function relations()
    {
        return array(
                'user' => array(self::BELONGS_TO, 'eUser', 'user_id'),
                'videos' => array(self::HAS_MANY, 'eVideo', 'question_id'),
                'videoTally' => array(self::STAT, 'eVideo', 'question_id', 'select' => 'COUNT(id)', 'group' => 'question_id'),
                'tickerTally' => array(self::STAT, 'eTicker', 'question_id', 'select' => 'COUNT(id)', 'group' => 'question_id'),
        );
    }    

    public function scopes() {
        return array(
            'current' => array(
                'condition' => "'".date("Y-m-d H:i:s")."' between start_time and end_time"
            ),
            'today' => array(
                'condition' => "start_time = '".date("Y-m-d")."'"
            ),
            'orderByCreatedDesc' => array(
                'order' => '`t`.created_on DESC',
            ),
            'orderByCreatedAsc' => array(
                'order' => '`t`.created_on ASC',
            ),
            'orderByIDDesc' => array(
                'order' => '`t`.id DESC',
            ),
        );
    }

}