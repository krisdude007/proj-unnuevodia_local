<?php

/**
 * This is the model class for table "TvScreenAppearSetting".
 *
 * The followings are the available columns in table 'TvScreenAppearSetting':
 * @property integer $id
 * @property string  $screen_type
 * @property string  $filename
 * @property string  $color
 * @property int     $font_size
 * @property string  $font_color
 * @property int     $slide_speed
 * @property int     $direction
 * @property string  $entity_type
 * @property string  $created_on
 * @property string  $updated_on
 */
class TvScreenAppearSetting extends ActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'tv_screen_setting';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('screen_type, entity_type, slide_speed, font_color, font_size, direction', 'required'), 
			array('color', 'length','min' => 2,  'max'=>10), 
			array('filename','file','types'=>'jpg', 'allowEmpty'=>true, 'maxSize' => 1024 * 1024, 'tooLarge' => 'The File is Too large to be uploaded.'),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, screen_type, filename, color, entity_type, font_size, font_color, slide_speed, direction, created_on, updated_on', 'safe', 'on'=>'search'),
		);
	} 

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array();
	}


	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'screen_type' => 'Screen Type',
			'filename' => 'Filename',
			'color' => 'Color Code',
			'font_size' => 'Font Size',
			'font_color' => 'Font Color',
			'slide_speed' => 'Slide Speed',
			'direction' => 'Direction',
			'entity_type' => 'Entity Type', 
			'created_on' => 'Created On',
			'updated_on' => 'Updated On',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('screen_type',$this->screen_type);
		$criteria->compare('filename',$this->filename);
		$criteria->compare('color',$this->color);
		$criteria->compare('font_size',$this->font_size);
		$criteria->compare('font_color',$this->font_color);
		$criteria->compare('slide_speed',$this->slide_speed);
		$criteria->compare('direction',$this->direction);
		$criteria->compare('entity_type',$this->entity_type);
		$criteria->compare('created_on',$this->created_on!==null?gmdate("Y-m-d H:i:s",strtotime($this->created_on)):null);
		$criteria->compare('updated_on',$this->updated_on!==null?gmdate("Y-m-d H:i:s",strtotime($this->updated_on)):null);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return TvScreenAppearSetting the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
}
