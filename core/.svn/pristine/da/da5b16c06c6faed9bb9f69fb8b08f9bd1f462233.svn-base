<?php

class VideoController extends Controller {

    public $layout = '//layouts/main';
    public $user;
    public $ticker;

    /**
     * Anything required on every page should be loaded here
     * and should also be made a class member.
     */
    function init() {
        parent::init();

        if (!Yii::app()->user->isGuest) {
            $this->user = ClientUtility::getUser();
            $this->ticker = new eTicker();
        }
    }

    protected function encode($id) {
        $video = eVideo::model()->findByPK($id);
        $videofile = Yii::app()->params['paths']['video'] . "/{$video->filename}" . VIDEO_PRE_FILE_EXT;
        if (file_exists($videofile)) {

            $videooutfile = preg_replace('/' . VIDEO_PRE_FILE_EXT . '$/', VIDEO_POST_FILE_EXT, $videofile);
            $duration = "00:00:" . Yii::app()->params['video']['duration'] . ".00";
            $watermark = $_SERVER['DOCUMENT_ROOT'] . VIDEO_WATERMARK;
            $videoEncoded = VideoUtility::ffmpegFlvToMp4($videofile, $videooutfile, $duration, $watermark);

            if ($videoEncoded) {
                
                // create gif for preview
                $gifName = Yii::app()->params['paths']['video'] . "/{$video->filename}.gif";
                VideoUtility::ffmpegFlvToGif($videofile, $gifName);

                $video->duration = $duration;
                $video->processed = 1;
                $video->watermarked = (file_exists($watermark)) ? 1 : 0;
                $video->save();
            }
        }
    }

    protected function download($id) {
        $video = eVideo::model()->findByPK($id);
        $videofile = Yii::app()->params['paths']['video'] . "/{$video->filename}" . VIDEO_PRE_FILE_EXT;
        if (!file_exists($videofile)) {
            $videofile = Yii::app()->params['paths']['video'] . "/{$video->user_id}_" . time() . VIDEO_PRE_FILE_EXT;
            $conn_id = ftp_connect(Yii::app()->params['wowza']['ip']);
            $login_result = ftp_login($conn_id, Yii::app()->params['wowza']['user'], Yii::app()->params['wowza']['password']);
            ftp_chdir($conn_id, Yii::app()->params['wowza']['path'] . "uid_{$video->user_id}/");
            @ftp_get($conn_id, $videofile, "{$video->filename}" . VIDEO_PRE_FILE_EXT, FTP_BINARY);
            ftp_close($conn_id);
            $start = floor(Yii::app()->params['video']['duration'] / 2);
            $imagefile = str_replace(VIDEO_PRE_FILE_EXT, VIDEO_IMAGE_FILE_EXT, $videofile);

            // generatae thumbnail from video
            VideoUtility::ffmpegGenerateThumbFromVideo($videofile, $imagefile, $start);

            $video->thumbnail = $video->filename = basename(str_replace(VIDEO_PRE_FILE_EXT, '', $videofile));
            $video->setScenario('download');
            $video->save();
        }
    }

    public function actionIndex($order = 'recent') {
        switch ($order) {
            case 'recent':
                $videos = eVideo::model()->with('user')->accepted()->recent()->findAll();
                break;
            default:
                $video = new eVideo;
                $videos = $video->orderBy(NULL, $order);
                break;
        }
        $this->render('index', array(
            'videos' => $videos,
                )
        );
    }

    public function actionPlay($view_key) {
        $video = eVideo::model()->with('user', 'brightcoves')->accepted()->findByAttributes(array('view_key' => $view_key));
        $user = eUser::model()->findByPK($video->user_id);
        
        if (!Yii::app()->user->isGuest) {
            $videoView = new eVideoView;
            $videoView->user_id = Yii::app()->user->getId();
            $videoView->video_id = $video->id;
            $videoView->save();
        }
        
        $this->render('play', array(
            'video' => $video,
            'user' => $user,
                )
        );
    }

    public function actionCapture() {
        if (Yii::app()->user->isGuest) {
            $this->redirect('/');
        }
        foreach ($_POST as $k => $v) {
            $$k = $v;
        }
        $video = eVideo::model()->findByAttributes(Array('user_id' => Yii::app()->user->getId(), 'filename' => $file));
        if (is_null($video)) {
            $video = new eVideo;
            $video->filename = $video->thumbnail = $file;
            $video->question_id = $qID;
            $video->source = $source;
            // set this to user id for time being
            // will be overwritten later with admin id
            $video->arbitrator_id = $video->user_id = Yii::app()->user->getId();
            $video->save();
            echo $video->id;
        } else {
            echo $video->id;
        }
    }

    public function actionProcess($id = 0) {
        if (Yii::app()->user->isGuest) {
            $this->redirect('/');
        }
        if ($id == 0) {
            $this->redirect(Yii::app()->createUrl('/record'));
        }
        $video = eVideo::model()->findByPK($id);
        if ($video->user_id != Yii::app()->user->getId()) {
            $this->redirect(Yii::app()->createUrl('/record'));
        }
        if (is_null($video) || $video->processed == 1) {
            $this->redirect(Yii::app()->createUrl('/record'));
        }
        if (isset($_POST['ajax']) && $_POST['ajax'] === 'video-process-form') {
            echo CActiveForm::validate(array($video));
            Yii::app()->end();
        }
        $this->download($id);
        if (isset($_POST['eVideo'])) {
            $video->attributes = $_POST['eVideo'];
            if ($video->validate()) {

                // see if user selected share to twitter or facebook
                if ($video->to_twitter == '1') {

                    // check to see if user has connected a twitter account
                    if (eUserTwitter::model()->countByAttributes(array('user_id' => Yii::app()->user->id)) == 0) {

                        // set to_twitter back to false
                        $video->to_twitter = 0;
                    }
                }

                // see if user selected share to twitter or facebook
                if ($video->to_facebook == '1') {

                    // check to see if user has connected a twitter account
                    if (eUserFacebook::model()->countByAttributes(array('user_id' => Yii::app()->user->id)) == 0) {

                        // set to_facebook back to false
                        $video->to_facebook = 0;
                    }
                }

                $autoApprove = eAppSetting::model()->findByAttributes(Array('attribute' => 'auto_approve_submitted_videos'));

                if ($autoApprove->value) {
                    $video->status = 'accepted';
                }

                // save the video
                $video->save();

                if ($video->status == 'accepted') {
                    AuditUtility::save($this, false, Array('action' => 'autoApprove', 'type' => 'video', 'id' => $video->id));
                }
                $this->encode($video->id);
                if(PAYPAL_ACTIVE){
                    $paypal = PaymentUtility::paypal($video);
                    if($paypal['response'] == 'success'){
                        $this->redirect($paypal['url']); 
                    } else {
                        var_dump($paypal);
                        //$this->redirect(Yii::app()->createURL('/thanks'));
                    }
                } else {
                    $this->redirect(Yii::app()->createURL('/thanks'));
                }                
                return true;
            }
        }
        $this->render('process', array(
            'model' => $video,
            'question_id' => $video->question_id,
            'videoInfo' => Array(
                'videofile' => '/' . basename(Yii::app()->params['paths']['video']) . "/{$video->filename}" . VIDEO_PRE_FILE_EXT,
                'image' => '/' . basename(Yii::app()->params['paths']['video']) . "/{$video->thumbnail}" . VIDEO_IMAGE_FILE_EXT,
                'width' => 426,
                'height' => 240,
            ),
                )
        );
    }

    public function actionThanks() {
        if (Yii::app()->user->isGuest) {
            $this->redirect('/');
        }
        $videos = eVideo::model()->findAllByAttributes(Array('user_id' => Yii::app()->user->getId()));
        $questions = eQuestion::model()->current()->findAll();
        foreach ($videos as $video) {
            $user_answered[] = $video->question_id;
        }
        foreach ($questions as $question) {
            if (in_array($question->id, $user_answered)) {
                continue;
            } else {
                break;
            }
        }
        $question = (is_null($question)) ? eQuestion::model()->current()->find() : $question;
        $this->render('thanks', array('question' => $question));
    }
    
    public function actionAjaxPreviewVideo(){   
        foreach($_POST as $k=>$v){
            $$k = $v;
        }
        $video = eVideo::model()->findByPK($vID);
        $videoInfo = Array(
            'videofile' => '/' . basename(Yii::app()->params['paths']['video']) . "/{$video->filename}" . VIDEO_PRE_FILE_EXT,
            'image' => '/' . basename(Yii::app()->params['paths']['video']) . "/{$video->thumbnail}" . VIDEO_IMAGE_FILE_EXT,
            'width' => 426,
            'height' => 240,
        );
        if(file_exists(Yii::app()->params['paths']['video'] . "/{$video->filename}" . VIDEO_PRE_FILE_EXT)){
            $ret['html'] = $this->renderPartial('_videoPlayer', array(
                'videoInfo' => $videoInfo,
                ),true
            );        
            $ret['status'] = 'COMPLETED';
        } else {
            $ret['html'] = 'Rendering Video...'.$vID;
            $ret['status'] = 'WAIT';
        }
        echo json_encode($ret);        
    }

    public function actionAjaxRate() {
        $this->layout = false;

        foreach ($_POST as $k => $v) {
            $$k = $v;
        }
        if (!Yii::app()->user->isGuest) {
            $videoRate = eVideoRating::model()->findByAttributes(array('user_id' => Yii::app()->user->getId(), 'video_id' => $object_id));
            $videoRate = (is_null($videoRate)) ? new eVideoRating() : $videoRate;
            $videoRate->user_id = Yii::app()->user->getId();
            $videoRate->video_id = $object_id;
            $videoRate->rating = $rating;
            $videoRate->save();
            $video = eVideo::model()->findByPK($object_id);
            echo json_encode(array('avg' => $video->rating, 'votes' => sizeof($video->videoRatings)));
        }
    }

    public function actionRecord($id = 0) {
        if (Yii::app()->user->isGuest) {
            $this->redirect(Yii::app()->createUrl('user/login'));
        } else {
            $user = eUser::model()->findByPK(Yii::app()->user->getId());
            if (!$user->terms_accepted) {
                $this->redirect(Yii::app()->createURL('/you/terms'));
            }
            if ($id == 0) {
                $questions = eQuestion::model()->current()->findAll();
                foreach ($questions as $q) {
                    $question = $q->question;
                    $id = $q->id;
                }
            } else {
                $questions = eQuestion::model()->findByPK($id);
                $question = $questions->question;
            }
            if (!is_null($question)) {
                $this->render('recorder', array(
                    'question' => $question,
                    'question_id' => $id,
                    'duration' => Yii::app()->params['video']['duration'],
                    'user_id' => Yii::app()->user->getId(),
                    'wowzaip' => Yii::app()->params['wowza']['clientip'],
                        )
                );
            } else {
                $this->redirect('/');
            }
        }
    }
    
    public function actionTwittercard($key=false){
        if(!$key){
            $this->redirect(Yii::app()->createURL('/'));
        } else {
            $video = eVideo::model()->findByAttributes(Array('view_key'=>$key));
            echo $this->renderPartial('/admin/_videoPlayer', array(
                    'videoInfo' => Array(
                        'videofile' => '/' . basename(Yii::app()->params['paths']['video']) . "/{$video->filename}" . VIDEO_POST_FILE_EXT,
                        'image' => '/' . basename(Yii::app()->params['paths']['video']) . "/{$video->thumbnail}" . VIDEO_IMAGE_FILE_EXT,
                        'width' => 360,
                        'height' => 200,
                    )
                )
            );
        }
    }    
       
}